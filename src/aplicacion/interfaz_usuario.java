/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aplicacion;

import ConexionSql.Comexion_Sql_Server;
import ConexionSql.Conexion_postgresql;
import ConexionSql.conexion_MYSQL;
import ConexionSql.conexion_Oracle;
import java.awt.HeadlessException;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author ASUS
 */
public class interfaz_usuario extends javax.swing.JFrame {
    //private javax.swing.JComboBox<String> jComboBox1;
    public String text = "";
    /**
     * Creates new form interfaz_usuario
     */
    public interfaz_usuario() {
        initComponents();
        jScrollPane1.setVisible(false);
        jPanel1.setVisible(false);
        jPanel2.setVisible(false);
        jPanel3.setVisible(false);
        jScrollPane3.setVisible(false);
        jPanel4.setVisible(false);
        jPanel5.setVisible(false);
        jPanel6.setVisible(false);
        jScrollPane5.setVisible(false);
        jPanel7.setVisible(false);
        jPanel8.setVisible(false);
        jScrollPane6.setVisible(false);
        jPanel9.setVisible(false);
        jPanel10.setVisible(false);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        VER = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        GUARDAR = new javax.swing.JButton();
        ELIMINAR = new javax.swing.JButton();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jTextField12 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jTextField13 = new javax.swing.JTextField();
        jTextField14 = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jTextField17 = new javax.swing.JTextField();
        jTextField18 = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        VER1 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jTextField19 = new javax.swing.JTextField();
        jTextField20 = new javax.swing.JTextField();
        jTextField21 = new javax.swing.JTextField();
        jTextField22 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jTextField23 = new javax.swing.JTextField();
        jTextField24 = new javax.swing.JTextField();
        GUARDAR1 = new javax.swing.JButton();
        ELIMINAR1 = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        jTextField25 = new javax.swing.JTextField();
        jTextField26 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel36 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jTextField27 = new javax.swing.JTextField();
        jTextField28 = new javax.swing.JTextField();
        jTextField29 = new javax.swing.JTextField();
        jTextField30 = new javax.swing.JTextField();
        jComboBox3 = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jTextField31 = new javax.swing.JTextField();
        jTextField32 = new javax.swing.JTextField();
        jTextField33 = new javax.swing.JTextField();
        jComboBox4 = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        VER2 = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jTextField34 = new javax.swing.JTextField();
        jTextField35 = new javax.swing.JTextField();
        jTextField36 = new javax.swing.JTextField();
        jTextField37 = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jTextField38 = new javax.swing.JTextField();
        jTextField39 = new javax.swing.JTextField();
        GUARDAR2 = new javax.swing.JButton();
        ELIMINAR2 = new javax.swing.JButton();
        jTextField40 = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jTextField41 = new javax.swing.JTextField();
        jTextField42 = new javax.swing.JTextField();
        jComboBox5 = new javax.swing.JComboBox<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        VER3 = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jTextField43 = new javax.swing.JTextField();
        jTextField44 = new javax.swing.JTextField();
        jTextField45 = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jTextField47 = new javax.swing.JTextField();
        jTextField48 = new javax.swing.JTextField();
        GUARDAR3 = new javax.swing.JButton();
        ELIMINAR3 = new javax.swing.JButton();
        jTextField49 = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jLabel56 = new javax.swing.JLabel();
        jTextField46 = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jTextField50 = new javax.swing.JTextField();
        jTextField51 = new javax.swing.JTextField();
        jComboBox6 = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        EMPLEADOS = new javax.swing.JMenu();
        VER_EMPLEADOS = new javax.swing.JMenuItem();
        INSERTAR_EMPLEADOS = new javax.swing.JMenuItem();
        ACTUALIZAR_EMPLEADOS = new javax.swing.JMenuItem();
        ELIMINAR_EMPLEADO = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();

        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setExtendedState(6);

        jScrollPane1.setWheelScrollingEnabled(false);

        VER.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        VER.setEnabled(false);
        jScrollPane1.setViewportView(VER);

        jLabel1.setText("Dni");

        jLabel2.setText("Nombres");

        jLabel3.setText("Apellidos");

        jLabel4.setText("Direccion");

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });

        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField3KeyTyped(evt);
            }
        });

        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField4KeyTyped(evt);
            }
        });

        jLabel5.setText("Telefono");

        jLabel6.setText("Correo electronico");

        jLabel7.setText("Fecha de contratacion");

        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField5KeyTyped(evt);
            }
        });

        jTextField6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField6KeyTyped(evt);
            }
        });

        GUARDAR.setText("GUARDAR");
        GUARDAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GUARDARActionPerformed(evt);
            }
        });

        ELIMINAR.setText("ELIMINAR");
        ELIMINAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ELIMINARActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField2))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField4))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(GUARDAR)
                                .addGap(18, 18, 18)
                                .addComponent(ELIMINAR)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GUARDAR)
                    .addComponent(ELIMINAR))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel8.setText("dni");

        jLabel9.setText("nombres");

        jLabel10.setText("apellidos");

        jLabel11.setText("telefono");

        jLabel12.setText("correo");

        jLabel13.setText("direccion");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jLabel15.setText("item a buscar");

        jButton1.setText("buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("cambiar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "dni", "nombres", "apellidos", "telefono", "correo", "direccion" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField8))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(50, 50, 50)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField12))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField11))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField10))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(47, 47, 47)
                                .addComponent(jButton1)
                                .addGap(63, 63, 63)
                                .addComponent(jButton2)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel15)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel14.setText("dni");

        jLabel16.setText("nombres");

        jLabel17.setText("apellidos");

        jLabel18.setText("telefono");

        jLabel19.setText("correo");

        jLabel20.setText("direccion");

        jLabel21.setText("item a buscar");

        jButton3.setText("eliminar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextField13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "dni", "nombres", "apellidos", "telefono", "correo", "direccion" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField14))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(26, 26, 26)
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField18))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField17))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField16))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel21)
                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jButton3)
                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(164, 164, 164))
        );

        jScrollPane3.setWheelScrollingEnabled(false);

        VER1.setAutoCreateRowSorter(true);
        VER1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        VER1.setEnabled(false);
        jScrollPane3.setViewportView(VER1);

        jLabel22.setText("nombre en clave");

        jLabel23.setText("denominacion comercial");

        jLabel24.setText("fecha de inicio");

        jLabel25.setText("fecha de finalizacion");

        jTextField19.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField19KeyTyped(evt);
            }
        });

        jTextField20.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField20KeyTyped(evt);
            }
        });

        jTextField21.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField21KeyTyped(evt);
            }
        });

        jTextField22.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField22KeyTyped(evt);
            }
        });

        jLabel26.setText("empleado dni");

        jLabel27.setText("estado actual");

        jLabel28.setText("empleado correo");

        jTextField23.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField23KeyTyped(evt);
            }
        });

        jTextField24.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField24KeyTyped(evt);
            }
        });

        GUARDAR1.setText("GUARDAR");
        GUARDAR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GUARDAR1ActionPerformed(evt);
            }
        });

        ELIMINAR1.setText("ELIMINAR");
        ELIMINAR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ELIMINAR1ActionPerformed(evt);
            }
        });

        jLabel29.setText("empleado telefono");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField24, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(GUARDAR1)
                                .addGap(18, 18, 18)
                                .addComponent(ELIMINAR1))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel28)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField26, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField20))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField22))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel29)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField25)
                                .addContainerGap())))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26)
                    .addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29)
                    .addComponent(jTextField25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28)
                    .addComponent(jTextField26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(jTextField24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GUARDAR1)
                    .addComponent(ELIMINAR1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel30.setText("nombre en clave");

        jLabel31.setText("denominacion comercial");

        jLabel32.setText("estado");

        jLabel33.setText("empleado dni");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(jTable2);

        jLabel36.setText("item a buscar");

        jButton4.setText("buscar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("cambiar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jTextField27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField27ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "nombre_en_clave", "denominacion_comercial", "estado", "empleado_dni" }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel31)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField28))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel30)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField27, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(50, 50, 50)
                                .addComponent(jLabel36)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel33)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField30))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel32)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField29, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(47, 47, 47)
                                .addComponent(jButton4)
                                .addGap(63, 63, 63)
                                .addComponent(jButton5)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(jLabel36)
                    .addComponent(jTextField27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(jTextField28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jTextField29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(jTextField30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(93, 93, 93)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel34.setText("nombre en clave");

        jLabel35.setText("denominacion comercial");

        jLabel37.setText("empleado dni");

        jLabel41.setText("item a buscar");

        jButton6.setText("eliminar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jTextField31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField31ActionPerformed(evt);
            }
        });

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "nombre en clave", "denominacion comercial", "empleado dni" }));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel35)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField32))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel34)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField31, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(26, 26, 26)
                        .addComponent(jLabel41)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel37)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField33, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(jLabel41)
                    .addComponent(jTextField31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(jTextField32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(jButton6)
                    .addComponent(jTextField33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(259, 259, 259))
        );

        jScrollPane5.setWheelScrollingEnabled(false);

        VER2.setAutoCreateRowSorter(true);
        VER2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        VER2.setEnabled(false);
        jScrollPane5.setViewportView(VER2);

        jLabel38.setText("descripcion");

        jLabel39.setText("tipo");

        jLabel40.setText("fecha de inicio estimada");

        jLabel42.setText("fecha de inicio real");

        jTextField34.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField34KeyTyped(evt);
            }
        });

        jTextField35.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField35KeyTyped(evt);
            }
        });

        jTextField36.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField36KeyTyped(evt);
            }
        });

        jTextField37.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField37KeyTyped(evt);
            }
        });

        jLabel43.setText("duracion real");

        jLabel44.setText("duracion estimada");

        jLabel45.setText("registro proyectos nombre en clave");

        jTextField38.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField38KeyTyped(evt);
            }
        });

        jTextField39.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField39KeyTyped(evt);
            }
        });

        GUARDAR2.setText("GUARDAR");
        GUARDAR2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GUARDAR2ActionPerformed(evt);
            }
        });

        ELIMINAR2.setText("ELIMINAR");
        ELIMINAR2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ELIMINAR2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel44)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField39, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(GUARDAR2)
                        .addGap(18, 18, 18)
                        .addComponent(ELIMINAR2))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel40)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField36, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel45)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField40))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel39)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField35))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel42)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField37))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel38)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField34, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel43)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField38, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(jTextField34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel43)
                    .addComponent(jTextField38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(jTextField35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(jTextField36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel45)
                    .addComponent(jTextField40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(jTextField37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel44)
                    .addComponent(jTextField39, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GUARDAR2)
                    .addComponent(ELIMINAR2))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jLabel46.setText("tipo");

        jLabel47.setText("descripcion");

        jLabel49.setText("item a buscar");

        jButton7.setText("eliminar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jTextField41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField41ActionPerformed(evt);
            }
        });

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "tipo", "descripcion" }));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton7)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel47)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField42))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel46)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField41, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(26, 26, 26)
                        .addComponent(jLabel49)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46)
                    .addComponent(jLabel49)
                    .addComponent(jTextField41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(jTextField42, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane6.setWheelScrollingEnabled(false);

        VER3.setAutoCreateRowSorter(true);
        VER3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        VER3.setEnabled(false);
        jScrollPane6.setViewportView(VER3);

        jLabel48.setText("codigo");

        jLabel50.setText("descripcion");

        jLabel51.setText("tipo");

        jLabel52.setText("documento");

        jTextField43.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField43KeyTyped(evt);
            }
        });

        jTextField44.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField44KeyTyped(evt);
            }
        });

        jTextField45.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField45KeyTyped(evt);
            }
        });

        jLabel53.setText("empleado_telefono");

        jLabel54.setText("empleado_dni");

        jLabel55.setText("empleados_correo_electronico");

        jTextField47.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField47KeyTyped(evt);
            }
        });

        jTextField48.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField48KeyTyped(evt);
            }
        });

        GUARDAR3.setText("GUARDAR");
        GUARDAR3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GUARDAR3ActionPerformed(evt);
            }
        });

        ELIMINAR3.setText("ELIMINAR");
        ELIMINAR3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ELIMINAR3ActionPerformed(evt);
            }
        });

        jButton8.setText("Abrir");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel56.setText("tareas de proyectos");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel51)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField45, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel55)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField49))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel54)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField48, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(GUARDAR3)
                                .addGap(18, 18, 18)
                                .addComponent(ELIMINAR3))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(jLabel50)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField44))
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(jLabel48)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextField43, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(jLabel53)
                                        .addGap(16, 16, 16)
                                        .addComponent(jTextField47, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(jLabel56)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField46, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel52)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton8)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel48)
                    .addComponent(jTextField43, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel53)
                    .addComponent(jTextField47, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel50)
                    .addComponent(jTextField44, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel56)
                    .addComponent(jTextField46, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel51)
                    .addComponent(jTextField45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel55)
                    .addComponent(jTextField49, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel52)
                    .addComponent(jButton8))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel54)
                    .addComponent(jTextField48, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GUARDAR3)
                    .addComponent(ELIMINAR3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel57.setText("codigo");

        jLabel58.setText("empleado dni");

        jLabel59.setText("item a buscar");

        jButton9.setText("eliminar");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jTextField50.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField50ActionPerformed(evt);
            }
        });

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "codigo", "empleado dni" }));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton9)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel58)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField51))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel57)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField50, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(26, 26, 26)
                        .addComponent(jLabel59)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel57)
                    .addComponent(jLabel59)
                    .addComponent(jTextField50, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel58)
                    .addComponent(jTextField51, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        EMPLEADOS.setText("EMPLEADOS");

        VER_EMPLEADOS.setText("VER");
        VER_EMPLEADOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VER_EMPLEADOSActionPerformed(evt);
            }
        });
        EMPLEADOS.add(VER_EMPLEADOS);

        INSERTAR_EMPLEADOS.setText("INSERTAR");
        INSERTAR_EMPLEADOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                INSERTAR_EMPLEADOSActionPerformed(evt);
            }
        });
        EMPLEADOS.add(INSERTAR_EMPLEADOS);

        ACTUALIZAR_EMPLEADOS.setText("ACTUALIZAR");
        ACTUALIZAR_EMPLEADOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ACTUALIZAR_EMPLEADOSActionPerformed(evt);
            }
        });
        EMPLEADOS.add(ACTUALIZAR_EMPLEADOS);

        ELIMINAR_EMPLEADO.setText("ELIMINAR");
        ELIMINAR_EMPLEADO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ELIMINAR_EMPLEADOActionPerformed(evt);
            }
        });
        EMPLEADOS.add(ELIMINAR_EMPLEADO);

        jMenuBar1.add(EMPLEADOS);

        jMenu2.setText("PROYECTOS");

        jMenuItem1.setText("VER");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem2.setText("INSERTAR");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem3.setText("ACTUALIZAR");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuItem4.setText("ELIMINAR");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("TAREAS DE PROYECTOS");

        jMenuItem5.setText("VER");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuItem6.setText("INSERTAR");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuItem7.setText("ELIMINAR");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("DOCUMENTOS DE LOS PROYECTOS");

        jMenuItem8.setText("VER");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem8);

        jMenuItem9.setText("INSERTAR");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem9);

        jMenuItem10.setText("ELIMINAR");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem10);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 213, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                .addGap(14, 14, 14)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(2, 2, 2))
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void INSERTAR_EMPLEADOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INSERTAR_EMPLEADOSActionPerformed
        jScrollPane1.setVisible(false);
        jScrollPane3.setVisible(false);
        jPanel2.setVisible(false);
        jPanel3.setVisible(false);
        jPanel4.setVisible(false);
        jPanel5.setVisible(false);
        jPanel6.setVisible(false);
        jScrollPane5.setVisible(false);
        jPanel7.setVisible(false);
        jPanel8.setVisible(false);
        jScrollPane6.setVisible(false);
        jPanel9.setVisible(false);
        jPanel10.setVisible(false);
        jPanel1.setVisible(true);
        getContentPane().validate();
        getContentPane().repaint();
    }//GEN-LAST:event_INSERTAR_EMPLEADOSActionPerformed

    private void VER_EMPLEADOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VER_EMPLEADOSActionPerformed
        jPanel1.setVisible(false);
        jPanel2.setVisible(false);
        jPanel3.setVisible(false);
        jPanel4.setVisible(false);
        jPanel5.setVisible(false);
        jScrollPane5.setVisible(false);
        jPanel6.setVisible(false);
        jScrollPane3.setVisible(false);
        jPanel7.setVisible(false);
        jPanel8.setVisible(false);
        jScrollPane6.setVisible(false);
        jPanel9.setVisible(false);
        jPanel10.setVisible(false);
        jScrollPane1.setVisible(true);
        getContentPane().validate();
        getContentPane().repaint();
        //MYSQL
        conexion_MYSQL cc = new conexion_MYSQL();
        Connection con = cc.conexionMysql();
        
        String[] titulos = {"dni","nombres","apellidos","direccion","telefono",
            "correo electronico","fecha de contratacion"};
        String[] registros = new String[8];
        
        DefaultTableModel modelo = new DefaultTableModel(null,titulos);
        
        String sql = "select * from empleados;";
        
        try {
            
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while (rs.next()) {                
                registros[0] = rs.getString("dni");
                registros[1] = rs.getString("nombres");
                registros[2] = rs.getString("apellidos");
                registros[3] = rs.getString("direccion");
                registros[4] = rs.getString("telefono");
                registros[5] = rs.getString("correo_electronico");
                registros[6] = rs.getString("fecha_de_contratacion");
                modelo.addRow(registros);
            }
            VER.setModel(modelo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error conexion: " + e);
        }
    }//GEN-LAST:event_VER_EMPLEADOSActionPerformed

    private void GUARDARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GUARDARActionPerformed
        int dni = Integer.parseInt(jTextField1.getText());
        String nombre = jTextField2.getText();
        String apellidos = jTextField3.getText();
        String direccion = jTextField4.getText();
        String telefono = jTextField5.getText();
        String correo = jTextField6.getText();
        int año = jCalendar1.getCalendar().get(Calendar.YEAR);
        int mes = jCalendar1.getCalendar().get(Calendar.MARCH);
        int mesresult = mes +1;
        int dia = jCalendar1.getCalendar().get(Calendar.DAY_OF_MONTH);
        String fecha = (año+"/"+mesresult+"/"+dia);
        
        String fecha_oracle = dia+"/"+mesresult+"/"+año;
       
        //conexion Mysql
        conexion_MYSQL cc = new conexion_MYSQL();
        Connection con = cc.conexionMysql();
        try {
            String sql = "INSERT INTO empleados(dni,nombres,apellidos,direccion,telefono"
                    + ",correo_electronico,fecha_de_contratacion)" +
            "VALUES" +
            "(?,?,?,?,?,?,?)";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setInt(1, dni);
            pst.setString(2, nombre);
            pst.setString(3, apellidos);
            pst.setString(4, direccion);
            pst.setString(5, telefono);
            pst.setString(6, correo);
            pst.setString(7, fecha);
            pst.execute();
            JOptionPane.showMessageDialog(null, "registro exitoso mysql");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error: " + e);
        }
        
        //conexion Oracle
        conexion_Oracle co = new conexion_Oracle();
        Connection con1 = co.conexionoracle();
        try {
            String sql = "INSERT INTO empleados (dni,nombres,apellidos,direccion,"
                    + "telefono,correo_electronico,fecha_de_contratacion)"
                    + "VALUES"
                    + "(?,?,?,?,?,?,?)";
            PreparedStatement pst = con1.prepareStatement(sql);
            pst.setInt(1, dni);
            pst.setString(2, nombre);
            pst.setString(3, apellidos);
            pst.setString(4, direccion);
            pst.setString(5, telefono);
            pst.setString(6, correo);
            pst.setString(7, fecha_oracle);
            pst.execute();
            JOptionPane.showMessageDialog(null, "registro exitoso oracle");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "error: " + e);
        }
        
        //conexion sql server
        Comexion_Sql_Server css = new Comexion_Sql_Server();
        Connection con2 = css.Conexion_sql_server();
        try {
            String sql = "INSERT INTO [dbo].[EMPLEADOS]([dni],[nombres],[apellidos],"
                    + "[direccion],[telefono],[correo_electronico],[fecha_de_contratacion]) "
                    + "VALUES "
                    + "(?,?,?,?,?,?,?)";
            PreparedStatement pst = con2.prepareStatement(sql);
            pst.setInt(1, dni);
            pst.setString(2, nombre);
            pst.setString(3, apellidos);
            pst.setString(4, direccion);
            pst.setString(5, telefono);
            pst.setString(6, correo);
            pst.setString(7, fecha);
            pst.execute();
            JOptionPane.showMessageDialog(null, "registro exitoso sql server");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "error: " + e);
        }
        
        //conexion postgresql
        Conexion_postgresql cp = new Conexion_postgresql();
        Connection con3 = cp.Conexion_postgresql();
       
        
        try {
            String sql = "INSERT INTO empleados (dni, nombres, apellidos, direccion, telefono, "
                    + "correo_electronico, fecha_de_contratacion) "
                    + "VALUES (?,?,?,?,?,?,'"+fecha+"')";
            PreparedStatement pst = con3.prepareStatement(sql);
            pst.setInt(1, dni);
            pst.setString(2, nombre);
            pst.setString(3, apellidos);
            pst.setString(4, direccion);
            pst.setString(5, telefono);
            pst.setString(6, correo);
            pst.execute();
            JOptionPane.showMessageDialog(null, "registro exitoso postgresql");
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, "error: " + e);
        }
        limpiar();
    }//GEN-LAST:event_GUARDARActionPerformed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        char validar = evt.getKeyChar();
        if(Character.isLetter(validar)){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "ingrese solo numeros");
        }
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
        char validar = evt.getKeyChar();
        if(Character.isDigit(validar)){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "ingrese solo letras");
        }
    }//GEN-LAST:event_jTextField2KeyTyped

    private void jTextField3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyTyped
        char validar = evt.getKeyChar();
        if(Character.isDigit(validar)){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "ingrese solo letras");
        }
    }//GEN-LAST:event_jTextField3KeyTyped

    private void jTextField4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyTyped
        char validar = evt.getKeyChar();
        if(Character.isDigit(validar)){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "ingrese solo letras");
        }
    }//GEN-LAST:event_jTextField4KeyTyped

    private void jTextField6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyTyped
        char validar = evt.getKeyChar();
        if(Character.isDigit(validar)){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "ingrese solo letras");
        }
    }//GEN-LAST:event_jTextField6KeyTyped

    private void jTextField5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyTyped
        char validar = evt.getKeyChar();
        if(Character.isLetter(validar)){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "ingrese solo numeros");
        }
    }//GEN-LAST:event_jTextField5KeyTyped

    private void ELIMINARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ELIMINARActionPerformed
        limpiar();
    }//GEN-LAST:event_ELIMINARActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void ACTUALIZAR_EMPLEADOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ACTUALIZAR_EMPLEADOSActionPerformed
        jScrollPane1.setVisible(false);
        jScrollPane3.setVisible(false);
        jPanel1.setVisible(false);
        jPanel3.setVisible(false);
        jPanel4.setVisible(false);
        jPanel6.setVisible(false);
        jScrollPane5.setVisible(false);
        jPanel7.setVisible(false);
        jPanel8.setVisible(false);
        jScrollPane6.setVisible(false);
        jPanel9.setVisible(false);
        jPanel10.setVisible(false);
        jPanel2.setVisible(true);
        jPanel2.validate();
        jPanel2.repaint();
        jScrollPane2.validate();
        jScrollPane2.repaint();
    }//GEN-LAST:event_ACTUALIZAR_EMPLEADOSActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String dni = jTextField7.getText();
        String nombres = jTextField8.getText();
        String apellidos = jTextField9.getText();
        String telefono = jTextField10.getText();
        String correo = jTextField11.getText();
        String direccion = jTextField12.getText();
      
        //conexion mysql
        if("dni".equals(jComboBox1.getSelectedItem().toString()))
        {
            conexion_MYSQL cm = new conexion_MYSQL();
            Connection cc = cm.conexionMysql();
            String[] titulos = {"dni","nombres","apellidos","direccion","telefono"
                    ,"correo electronico","fecha de contratacion"};
            String[] registros = new String[8];

            DefaultTableModel modelo = new DefaultTableModel(null,titulos);

            String sql = "select * from empleados where dni = "+dni+"";
            
            try {

                Statement st = cc.createStatement();
                ResultSet rs = st.executeQuery(sql);

                while (rs.next()) {                
                    registros[0] = rs.getString("dni");
                    registros[1] = rs.getString("nombres");
                    registros[2] = rs.getString("apellidos");
                    registros[3] = rs.getString("direccion");
                    registros[4] = rs.getString("telefono");
                    registros[5] = rs.getString("correo_electronico");
                    registros[6] = rs.getString("fecha_de_contratacion");
                    modelo.addRow(registros);
                }
                jTable1.setModel(modelo);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error conexion: " + e);
            }
        }
        if("nombres".equals(jComboBox1.getSelectedItem().toString())){
            conexion_MYSQL cm = new conexion_MYSQL();
            Connection cc = cm.conexionMysql();
            String[] titulos = {"dni","nombres","apellidos","direccion","telefono"
                    ,"correo electronico","fecha de contratacion"};
            String[] registros = new String[8];

            DefaultTableModel modelo = new DefaultTableModel(null,titulos);

            String sql = "select * from empleados where nombres = '"+nombres+"'";
            
            try {

                Statement st = cc.createStatement();
                ResultSet rs = st.executeQuery(sql);

                while (rs.next()) {                
                    registros[0] = rs.getString("dni");
                    registros[1] = rs.getString("nombres");
                    registros[2] = rs.getString("apellidos");
                    registros[3] = rs.getString("direccion");
                    registros[4] = rs.getString("telefono");
                    registros[5] = rs.getString("correo_electronico");
                    registros[6] = rs.getString("fecha_de_contratacion");
                    modelo.addRow(registros);
                }
                jTable1.setModel(modelo);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error conexion: " + e);
            }
        }
        if("apellidos".equals(jComboBox1.getSelectedItem().toString())){
            conexion_MYSQL cm = new conexion_MYSQL();
            Connection cc = cm.conexionMysql();
            String[] titulos = {"dni","nombres","apellidos","direccion","telefono"
                    ,"correo electronico","fecha de contratacion"};
            String[] registros = new String[8];

            DefaultTableModel modelo = new DefaultTableModel(null,titulos);

            String sql = "select * from empleados where apellidos = '"+apellidos+"'";
            
            try {

                Statement st = cc.createStatement();
                ResultSet rs = st.executeQuery(sql);

                while (rs.next()) {                
                    registros[0] = rs.getString("dni");
                    registros[1] = rs.getString("nombres");
                    registros[2] = rs.getString("apellidos");
                    registros[3] = rs.getString("direccion");
                    registros[4] = rs.getString("telefono");
                    registros[5] = rs.getString("correo_electronico");
                    registros[6] = rs.getString("fecha_de_contratacion");
                    modelo.addRow(registros);
                }
                jTable1.setModel(modelo);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error conexion: " + e);
            }
        }
        if("telefono".equals(jComboBox1.getSelectedItem().toString())){
            conexion_MYSQL cm = new conexion_MYSQL();
            Connection cc = cm.conexionMysql();
            String[] titulos = {"dni","nombres","apellidos","direccion","telefono"
                    ,"correo electronico","fecha de contratacion"};
            String[] registros = new String[8];

            DefaultTableModel modelo = new DefaultTableModel(null,titulos);

            String sql = "select * from empleados where telefono = '"+telefono+"'";
            
            try {

                Statement st = cc.createStatement();
                ResultSet rs = st.executeQuery(sql);

                while (rs.next()) {                
                    registros[0] = rs.getString("dni");
                    registros[1] = rs.getString("nombres");
                    registros[2] = rs.getString("apellidos");
                    registros[3] = rs.getString("direccion");
                    registros[4] = rs.getString("telefono");
                    registros[5] = rs.getString("correo_electronico");
                    registros[6] = rs.getString("fecha_de_contratacion");
                    modelo.addRow(registros);
                }
                jTable1.setModel(modelo);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error conexion: " + e);
            }
        }
        if("correo".equals(jComboBox1.getSelectedItem().toString())){
            conexion_MYSQL cm = new conexion_MYSQL();
            Connection cc = cm.conexionMysql();
            String[] titulos = {"dni","nombres","apellidos","direccion","telefono"
                    ,"correo electronico","fecha de contratacion"};
            String[] registros = new String[8];

            DefaultTableModel modelo = new DefaultTableModel(null,titulos);

            String sql = "select * from empleados where correo_electronico = '"+correo+"'";
            
            try {

                Statement st = cc.createStatement();
                ResultSet rs = st.executeQuery(sql);

                while (rs.next()) {                
                    registros[0] = rs.getString("dni");
                    registros[1] = rs.getString("nombres");
                    registros[2] = rs.getString("apellidos");
                    registros[3] = rs.getString("direccion");
                    registros[4] = rs.getString("telefono");
                    registros[5] = rs.getString("correo_electronico");
                    registros[6] = rs.getString("fecha_de_contratacion");
                    modelo.addRow(registros);
                }
                jTable1.setModel(modelo);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error conexion: " + e);
            }
        }
        if("direccion".equals(jComboBox1.getSelectedItem().toString())){
            conexion_MYSQL cm = new conexion_MYSQL();
            Connection cc = cm.conexionMysql();
            String[] titulos = {"dni","nombres","apellidos","direccion","telefono"
                    ,"correo electronico","fecha de contratacion"};
            String[] registros = new String[8];

            DefaultTableModel modelo = new DefaultTableModel(null,titulos);

            String sql = "select * from empleados where direccion = '"+direccion+"'";
            
            try {

                Statement st = cc.createStatement();
                ResultSet rs = st.executeQuery(sql);

                while (rs.next()) {                
                    registros[0] = rs.getString("dni");
                    registros[1] = rs.getString("nombres");
                    registros[2] = rs.getString("apellidos");
                    registros[3] = rs.getString("direccion");
                    registros[4] = rs.getString("telefono");
                    registros[5] = rs.getString("correo_electronico");
                    registros[6] = rs.getString("fecha_de_contratacion");
                    modelo.addRow(registros);
                }
                jTable1.setModel(modelo);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error conexion: " + e);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int dni = Integer.parseInt(jTextField7.getText());
        String nombres = jTextField8.getText();
        String apellidos = jTextField9.getText();
        String telefono = jTextField10.getText();
        String correo = jTextField11.getText();
        String direccion = jTextField12.getText();
        //conexion Mysql
        if("dni".equals(jComboBox1.getSelectedItem().toString())){
            conexion_MYSQL cc = new conexion_MYSQL();
            Connection con = cc.conexionMysql();
            try {
                String sql = "update empleados set nombres = '"+nombres+"' "
                        + ", apellidos ='"+apellidos+"' , direccion = '"+direccion+"'"
                        + ", telefono='"+telefono+"', correo_electronico = '"+correo+"' "
                        + "where dni = "+dni+"";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso mysql");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion Oracle
            conexion_Oracle co = new conexion_Oracle();
            Connection con1 = co.conexionoracle();
            try {
                String sql = "update empleados set nombres = '"+nombres+"' , "
                        + "apellidos ='"+apellidos+"' , direccion = '"+direccion+"', "
                        + "telefono='"+telefono+"', correo_electronico = '"+correo+"' "
                        + "where dni = "+dni+"";
                PreparedStatement pst = con1.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso oracle");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion sql server
            Comexion_Sql_Server css = new Comexion_Sql_Server();
            Connection con2 = css.Conexion_sql_server();
            try {
                String sql = "update [dbo].[EMPLEADOS] set nombres = '"+nombres+"' ,"
                        + " apellidos ='"+apellidos+"' , direccion = '"+direccion+"', "
                        + "telefono='"+telefono+"', correo_electronico = '"+correo+"' "
                        + "where dni = "+dni+"";
                PreparedStatement pst = con2.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso sql server");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion postgresql
            Conexion_postgresql cp = new Conexion_postgresql();
            Connection con3 = cp.Conexion_postgresql();


            try {
                String sql = "update empleados set nombres = '"+nombres+"' ,"
                        + " apellidos ='"+apellidos+"' , "
                        + "direccion = '"+direccion+"', telefono='"+telefono+"', "
                        + "correo_electronico = '"+correo+"' where dni = "+dni+"";
                PreparedStatement pst = con3.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso postgresql");
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }
        }
        //conexion Mysql
        if("nombres".equals(jComboBox1.getSelectedItem().toString())){
            conexion_MYSQL cc = new conexion_MYSQL();
            Connection con = cc.conexionMysql();
            try {
                String sql = "update empleados set nombres = '"+nombres+"' ,"
                        + " apellidos ='"+apellidos+"' , direccion = '"+direccion+"', "
                        + "telefono='"+telefono+"', correo_electronico = '"+correo+"' "
                        + "where dni = "+dni+"";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso mysql");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion Oracle
            conexion_Oracle co = new conexion_Oracle();
            Connection con1 = co.conexionoracle();
            try {
                String sql = "update empleados set nombres = '"+nombres+"' , "
                        + "apellidos ='"+apellidos+"' , direccion = '"+direccion+"', "
                        + "telefono='"+telefono+"', correo_electronico = '"+correo+"'"
                        + " where dni = "+dni+"";
                PreparedStatement pst = con1.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso oracle");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion sql server
            Comexion_Sql_Server css = new Comexion_Sql_Server();
            Connection con2 = css.Conexion_sql_server();
            try {
                String sql = "update [dbo].[EMPLEADOS] set nombres = '"+nombres+"' , "
                        + "apellidos ='"+apellidos+"' , direccion = '"+direccion+"', "
                        + "telefono='"+telefono+"', correo_electronico = '"+correo+"' "
                        + "where dni = "+dni+"";
                PreparedStatement pst = con2.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso sql server");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion postgresql
            Conexion_postgresql cp = new Conexion_postgresql();
            Connection con3 = cp.Conexion_postgresql();


            try {
                String sql = "update empleados set nombres = '"+nombres+"' , apellidos ='"+apellidos+"' , direccion = '"+direccion+"', telefono='"+telefono+"', correo_electronico = '"+correo+"' where dni = "+dni+"";
                PreparedStatement pst = con3.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso postgresql");
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }
        }
        //conexion Mysql
        if("apellidos".equals(jComboBox1.getSelectedItem().toString())){
            conexion_MYSQL cc = new conexion_MYSQL();
            Connection con = cc.conexionMysql();
            try {
                String sql = "update empleados set nombres = '"+nombres+"' , apellidos ='"+apellidos+"' , direccion = '"+direccion+"', telefono='"+telefono+"', correo_electronico = '"+correo+"' where dni = "+dni+"";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso mysql");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion Oracle
            conexion_Oracle co = new conexion_Oracle();
            Connection con1 = co.conexionoracle();
            try {
                String sql = "update empleados set nombres = '"+nombres+"' , apellidos ='"+apellidos+"' , direccion = '"+direccion+"', telefono='"+telefono+"', correo_electronico = '"+correo+"' where dni = "+dni+"";
                PreparedStatement pst = con1.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso oracle");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion sql server
            Comexion_Sql_Server css = new Comexion_Sql_Server();
            Connection con2 = css.Conexion_sql_server();
            try {
                String sql = "update [dbo].[EMPLEADOS] set nombres = '"+nombres+"' , apellidos ='"+apellidos+"' , direccion = '"+direccion+"', telefono='"+telefono+"', correo_electronico = '"+correo+"' where dni = "+dni+"";
                PreparedStatement pst = con2.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso sql server");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion postgresql
            Conexion_postgresql cp = new Conexion_postgresql();
            Connection con3 = cp.Conexion_postgresql();


            try {
                String sql = "update empleados set nombres = '"+nombres+"' , apellidos ='"+apellidos+"' , direccion = '"+direccion+"', telefono='"+telefono+"', correo_electronico = '"+correo+"' where dni = "+dni+"";
                PreparedStatement pst = con3.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso postgresql");
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }
        }
        //conexion Mysql
        if("telefono".equals(jComboBox1.getSelectedItem().toString())){
            conexion_MYSQL cc = new conexion_MYSQL();
            Connection con = cc.conexionMysql();
            try {
                String sql = "update empleados set nombres = '"+nombres+"' , apellidos ='"+apellidos+"' , direccion = '"+direccion+"', telefono='"+telefono+"', correo_electronico = '"+correo+"' where dni = "+dni+"";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso mysql");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion Oracle
            conexion_Oracle co = new conexion_Oracle();
            Connection con1 = co.conexionoracle();
            try {
                String sql = "update empleados set nombres = '"+nombres+"' , apellidos ='"+apellidos+"' , direccion = '"+direccion+"', telefono='"+telefono+"', correo_electronico = '"+correo+"' where dni = "+dni+"";
                PreparedStatement pst = con1.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso oracle");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion sql server
            Comexion_Sql_Server css = new Comexion_Sql_Server();
            Connection con2 = css.Conexion_sql_server();
            try {
                String sql = "update [dbo].[EMPLEADOS] set nombres = '"+nombres+"' , apellidos ='"+apellidos+"' , direccion = '"+direccion+"', telefono='"+telefono+"', correo_electronico = '"+correo+"' where dni = "+dni+"";
                PreparedStatement pst = con2.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso sql server");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion postgresql
            Conexion_postgresql cp = new Conexion_postgresql();
            Connection con3 = cp.Conexion_postgresql();


            try {
                String sql = "update empleados set nombres = '"+nombres+"' , apellidos ='"+apellidos+"' , direccion = '"+direccion+"', telefono='"+telefono+"', correo_electronico = '"+correo+"' where dni = "+dni+"";
                PreparedStatement pst = con3.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso postgresql");
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }
        }
        //conexion Mysql
        if("correo".equals(jComboBox1.getSelectedItem().toString())){
            conexion_MYSQL cc = new conexion_MYSQL();
            Connection con = cc.conexionMysql();
            try {
                String sql = "update empleados set nombres = '"+nombres+"' , apellidos ='"+apellidos+"' , direccion = '"+direccion+"', telefono='"+telefono+"', correo_electronico = '"+correo+"' where dni = "+dni+"";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso mysql");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion Oracle
            conexion_Oracle co = new conexion_Oracle();
            Connection con1 = co.conexionoracle();
            try {
                String sql = "update empleados set nombres = '"+nombres+"' , apellidos ='"+apellidos+"' , direccion = '"+direccion+"', telefono='"+telefono+"', correo_electronico = '"+correo+"' where dni = "+dni+"";
                PreparedStatement pst = con1.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso oracle");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion sql server
            Comexion_Sql_Server css = new Comexion_Sql_Server();
            Connection con2 = css.Conexion_sql_server();
            try {
                String sql = "update [dbo].[EMPLEADOS] set nombres = '"+nombres+"' , apellidos ='"+apellidos+"' , direccion = '"+direccion+"', telefono='"+telefono+"', correo_electronico = '"+correo+"' where dni = "+dni+"";
                PreparedStatement pst = con2.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso sql server");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion postgresql
            Conexion_postgresql cp = new Conexion_postgresql();
            Connection con3 = cp.Conexion_postgresql();


            try {
                String sql = "update empleados set nombres = '"+nombres+"' , apellidos ='"+apellidos+"' , direccion = '"+direccion+"', telefono='"+telefono+"', correo_electronico = '"+correo+"' where dni = "+dni+"";
                PreparedStatement pst = con3.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso postgresql");
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }
        }
        //conexion Mysql
        if("direccion".equals(jComboBox1.getSelectedItem().toString())){
            conexion_MYSQL cc = new conexion_MYSQL();
            Connection con = cc.conexionMysql();
            try {
                String sql = "update empleados set nombres = '"+nombres+"' , apellidos ='"+apellidos+"' , direccion = '"+direccion+"', telefono='"+telefono+"', correo_electronico = '"+correo+"' where dni = "+dni+"";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso mysql");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion Oracle
            conexion_Oracle co = new conexion_Oracle();
            Connection con1 = co.conexionoracle();
            try {
                String sql = "update empleados set nombres = '"+nombres+"' , apellidos ='"+apellidos+"' , direccion = '"+direccion+"', telefono='"+telefono+"', correo_electronico = '"+correo+"' where dni = "+dni+"";
                PreparedStatement pst = con1.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso oracle");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion sql server
            Comexion_Sql_Server css = new Comexion_Sql_Server();
            Connection con2 = css.Conexion_sql_server();
            try {
                String sql = "update [dbo].[EMPLEADOS] set nombres = '"+nombres+"' , apellidos ='"+apellidos+"' , direccion = '"+direccion+"', telefono='"+telefono+"', correo_electronico = '"+correo+"' where dni = "+dni+"";
                PreparedStatement pst = con2.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso sql server");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion postgresql
            Conexion_postgresql cp = new Conexion_postgresql();
            Connection con3 = cp.Conexion_postgresql();


            try {
                String sql = "update empleados set nombres = '"+nombres+"' , apellidos ='"+apellidos+"' , direccion = '"+direccion+"', telefono='"+telefono+"', correo_electronico = '"+correo+"' where dni = "+dni+"";
                PreparedStatement pst = con3.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso postgresql");
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }
        }
        limpiar();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int dni = Integer.parseInt(jTextField13.getText());
        String nombres = jTextField14.getText();
        String apellidos = jTextField15.getText();
        String telefono = jTextField16.getText();
        String correo = jTextField17.getText();
        String direccion = jTextField18.getText();
        //conexion Mysql
        if("dni".equals(jComboBox1.getSelectedItem().toString())){
            conexion_MYSQL cc = new conexion_MYSQL();
            Connection con = cc.conexionMysql();
            try {
                String sql = "delete from empleados where dni = "+dni+"";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso mysql");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion Oracle
            conexion_Oracle co = new conexion_Oracle();
            Connection con1 = co.conexionoracle();
            try {
                String sql = "delete from empleados where dni = "+dni+"";
                PreparedStatement pst = con1.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso oracle");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion sql server
            Comexion_Sql_Server css = new Comexion_Sql_Server();
            Connection con2 = css.Conexion_sql_server();
            try {
                String sql = "delete from [dbo].[EMPLEADOS] where dni = "+dni+"";
                PreparedStatement pst = con2.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso sql server");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion postgresql
            Conexion_postgresql cp = new Conexion_postgresql();
            Connection con3 = cp.Conexion_postgresql();


            try {
                String sql = "delete from empleados where dni = "+dni+"";
                PreparedStatement pst = con3.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso postgresql");
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }
        }
        //conexion Mysql
        if("nombres".equals(jComboBox1.getSelectedItem().toString())){
            conexion_MYSQL cc = new conexion_MYSQL();
            Connection con = cc.conexionMysql();
            try {
                String sql = "delete from empleados where nombres = "+nombres+"";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso mysql");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion Oracle
            conexion_Oracle co = new conexion_Oracle();
            Connection con1 = co.conexionoracle();
            try {
                String sql = "delete from empleados where nombres = "+nombres+"";
                PreparedStatement pst = con1.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso oracle");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion sql server
            Comexion_Sql_Server css = new Comexion_Sql_Server();
            Connection con2 = css.Conexion_sql_server();
            try {
                String sql = "delete from [dbo].[EMPLEADOS] where nombres = "+nombres+"";
                PreparedStatement pst = con2.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso sql server");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion postgresql
            Conexion_postgresql cp = new Conexion_postgresql();
            Connection con3 = cp.Conexion_postgresql();


            try {
                String sql = "delete from empleados where nombres = "+nombres+"";
                PreparedStatement pst = con3.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso postgresql");
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }
        }
        //conexion Mysql
        if("apellidos".equals(jComboBox1.getSelectedItem().toString())){
            conexion_MYSQL cc = new conexion_MYSQL();
            Connection con = cc.conexionMysql();
            try {
                String sql = "delete from empleados where apellidos = "+apellidos+"";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso mysql");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion Oracle
            conexion_Oracle co = new conexion_Oracle();
            Connection con1 = co.conexionoracle();
            try {
                String sql = "delete from empleados where apellidos = "+apellidos+"";
                PreparedStatement pst = con1.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso oracle");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion sql server
            Comexion_Sql_Server css = new Comexion_Sql_Server();
            Connection con2 = css.Conexion_sql_server();
            try {
                String sql = "delete from [dbo].[EMPLEADOS] where apellidos = "+apellidos+"";
                PreparedStatement pst = con2.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso sql server");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion postgresql
            Conexion_postgresql cp = new Conexion_postgresql();
            Connection con3 = cp.Conexion_postgresql();


            try {
                String sql = "delete from empleados where apellidos = "+apellidos+"";
                PreparedStatement pst = con3.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso postgresql");
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }
        }
        //conexion Mysql
        if("telefono".equals(jComboBox1.getSelectedItem().toString())){
            conexion_MYSQL cc = new conexion_MYSQL();
            Connection con = cc.conexionMysql();
            try {
                String sql = "delete from empleados where telefono = "+telefono+"";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso mysql");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion Oracle
            conexion_Oracle co = new conexion_Oracle();
            Connection con1 = co.conexionoracle();
            try {
                String sql = "delete from empleados where telefono = "+telefono+"";
                PreparedStatement pst = con1.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso oracle");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion sql server
            Comexion_Sql_Server css = new Comexion_Sql_Server();
            Connection con2 = css.Conexion_sql_server();
            try {
                String sql = "delete from [dbo].[EMPLEADOS] where telefono = "+telefono+"";
                PreparedStatement pst = con2.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso sql server");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion postgresql
            Conexion_postgresql cp = new Conexion_postgresql();
            Connection con3 = cp.Conexion_postgresql();


            try {
                String sql = "delete from empleados where telefono = "+telefono+"";
                PreparedStatement pst = con3.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso postgresql");
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }
        }
        //conexion Mysql
        if("correo".equals(jComboBox1.getSelectedItem().toString())){
            conexion_MYSQL cc = new conexion_MYSQL();
            Connection con = cc.conexionMysql();
            try {
                String sql = "delete from empleados where correo = "+correo+"";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso mysql");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion Oracle
            conexion_Oracle co = new conexion_Oracle();
            Connection con1 = co.conexionoracle();
            try {
                String sql = "delete from empleados where correo = "+correo+"";
                PreparedStatement pst = con1.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso oracle");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion sql server
            Comexion_Sql_Server css = new Comexion_Sql_Server();
            Connection con2 = css.Conexion_sql_server();
            try {
                String sql = "delete from [dbo].[EMPLEADOS] where correo = "+correo+"";
                PreparedStatement pst = con2.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso sql server");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion postgresql
            Conexion_postgresql cp = new Conexion_postgresql();
            Connection con3 = cp.Conexion_postgresql();


            try {
                String sql = "delete from empleados where correo = "+correo+"";
                PreparedStatement pst = con3.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso postgresql");
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }
        }
        //conexion Mysql
        if("direccion".equals(jComboBox1.getSelectedItem().toString())){
            conexion_MYSQL cc = new conexion_MYSQL();
            Connection con = cc.conexionMysql();
            try {
                String sql = "delete from empleados where direccion = "+direccion+"";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso mysql");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion Oracle
            conexion_Oracle co = new conexion_Oracle();
            Connection con1 = co.conexionoracle();
            try {
                String sql = "delete from empleados where direccion = "+direccion+"";
                PreparedStatement pst = con1.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso oracle");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion sql server
            Comexion_Sql_Server css = new Comexion_Sql_Server();
            Connection con2 = css.Conexion_sql_server();
            try {
                String sql = "delete from [dbo].[EMPLEADOS] where direccion = "+direccion+"";
                PreparedStatement pst = con2.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso sql server");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion postgresql
            Conexion_postgresql cp = new Conexion_postgresql();
            Connection con3 = cp.Conexion_postgresql();


            try {
                String sql = "delete from empleados where direccion = "+direccion+"";
                PreparedStatement pst = con3.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso postgresql");
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }
        }
        limpiar();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField13ActionPerformed

    private void ELIMINAR_EMPLEADOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ELIMINAR_EMPLEADOActionPerformed
        jScrollPane1.setVisible(false);
        jScrollPane3.setVisible(false);
        jPanel1.setVisible(false);
        jPanel2.setVisible(false);
        jPanel4.setVisible(false);
        jScrollPane5.setVisible(false);
        jPanel7.setVisible(false);
        jPanel8.setVisible(false);
        jPanel9.setVisible(false);
        jPanel3.setVisible(true);
        jPanel3.validate();
        jPanel3.repaint();
    }//GEN-LAST:event_ELIMINAR_EMPLEADOActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        jPanel1.setVisible(false);
        jPanel2.setVisible(false);
        jPanel3.setVisible(false);
        jPanel4.setVisible(false);
        jPanel5.setVisible(false);
        jPanel6.setVisible(false);
        jScrollPane3.setVisible(false);
        jScrollPane5.setVisible(false);
        jPanel7.setVisible(false);
        jPanel8.setVisible(false);
        jScrollPane6.setVisible(false);
        jPanel9.setVisible(false);
        jPanel10.setVisible(false);
        jScrollPane1.setVisible(true);
        getContentPane().validate();
        getContentPane().repaint();
        //oracle
        conexion_Oracle cc = new conexion_Oracle();
        Connection con = cc.conexionoracle();
        
        String[] titulos = {"nombre en clave","denominacion comercial",
            "fecha de inicio","fecha de finalizacion","estado actual"
                ,"empleados dni","empleados telefono","empleados correo electronico"};
        String[] registros = new String[9];
        
        DefaultTableModel modelo = new DefaultTableModel(null,titulos);
        
        String sql = "select * from registro_proyectos";
        
        try {
            
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while (rs.next()) {                
                registros[0] = rs.getString("nombre_en_clave");
                registros[1] = rs.getString("denominacion_comercial");
                registros[2] = rs.getString("fecha_de_inicio");
                registros[3] = rs.getString("fecha_de_finalizacion");
                registros[4] = rs.getString("estado_actual");
                registros[5] = rs.getString("empleados_dni");
                registros[6] = rs.getString("empleados_telefono");
                registros[7] = rs.getString("empleados_correo_electronico");
                modelo.addRow(registros);
            }
            VER.setModel(modelo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error conexion: " + e);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jTextField19KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField19KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField19KeyTyped

    private void jTextField20KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField20KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField20KeyTyped

    private void jTextField21KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField21KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField21KeyTyped

    private void jTextField22KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField22KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField22KeyTyped

    private void jTextField23KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField23KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField23KeyTyped

    private void jTextField24KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField24KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField24KeyTyped

    private void GUARDAR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GUARDAR1ActionPerformed
        String nombre_en_clave = jTextField19.getText();
        String denominacion_comercial = jTextField20.getText();
        String fecha_de_inicio = jTextField21.getText();
        String fecha_de_finalizacion = jTextField22.getText();
        String estado_actual = jTextField24.getText();
        String empleado_dni = jTextField23.getText();
        String empleado_tel = jTextField25.getText();
        String empleado_correo = jTextField26.getText();
        //oracle
        String dia_oracle;
        String mes_oracle;
        String año_oracle;
        String dia1_oracle;
        String mes1_oracle;
        String año1_oracle;
        String[] palabras = fecha_de_inicio.split("/");
        dia_oracle = palabras[2];
        mes_oracle = palabras[1];
        año_oracle = palabras[0];
        String[] palabras1 = fecha_de_finalizacion.split("/");
        dia1_oracle = palabras1[2];
        mes1_oracle = palabras1[1];
        año1_oracle = palabras1[0];
        String fecha_de_inicio_oracle = dia_oracle+"/"+mes_oracle+"/"+año_oracle;
        String fecha_de_finalizacion_oracle = dia1_oracle+"/"+mes1_oracle+"/"+año1_oracle;
        //postgresql
        int empleados_dni_postgresql = Integer.parseInt(jTextField23.getText());
        //conexion Mysql
        conexion_MYSQL cc = new conexion_MYSQL();
        Connection con = cc.conexionMysql();
        try {
            String sql = "INSERT INTO registro_proyectos(nombre_en_clave,denominacion_comercial,"
                    + "fecha_de_inicio,fecha_de_finalizacion,"
                    + "estado_actual,empleados_dni,empleados_telefono,"
                    + "empleados_correo_electronico)" +
            "VALUES" +
            "(?,?,?,?,?,?,?,?)";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, nombre_en_clave);
            pst.setString(2, denominacion_comercial);
            pst.setString(3, fecha_de_inicio);
            pst.setString(4, fecha_de_finalizacion);
            pst.setString(5, estado_actual);
            pst.setString(6, empleado_dni);
            pst.setString(7, empleado_tel);
            pst.setString(8, empleado_correo);
            pst.execute();
            JOptionPane.showMessageDialog(null, "registro exitoso mysql");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error: " + e);
        }
        
        //conexion Oracle
        conexion_Oracle co = new conexion_Oracle();
        Connection con1 = co.conexionoracle();
        try {
            String sql = "INSERT INTO registro_proyectos(nombre_en_clave,denominacion_comercial,"
                    + "fecha_de_inicio,fecha_de_finalizacion,"
                    + "estado_actual,empleados_dni,empleados_telefono,"
                    + "empleados_correo_electronico)" +
            "VALUES" +
            "(?,?,?,?,?,?,?,?)";
            PreparedStatement pst = con1.prepareStatement(sql);
            pst.setString(1, nombre_en_clave);
            pst.setString(2, denominacion_comercial);
            pst.setString(3, fecha_de_inicio_oracle);
            pst.setString(4, fecha_de_finalizacion_oracle);
            pst.setString(5, estado_actual);
            pst.setString(6, empleado_dni);
            pst.setString(7, empleado_tel);
            pst.setString(8, empleado_correo);
            pst.execute();
            JOptionPane.showMessageDialog(null, "registro exitoso oracle");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "error: " + e);
        }
        
        //conexion sql server
        Comexion_Sql_Server css = new Comexion_Sql_Server();
        Connection con2 = css.Conexion_sql_server();
        try {
            String sql = "INSERT INTO [dbo].[registro_proyectos](nombre_en_clave,"
                    + "denominacion_comercial,fecha_de_inicio,fecha_de_finalizacion,"
                    + "estado_actual,empleados_dni,empleados_telefono,"
                    + "empleados_correo_electronico)" +
            "VALUES" +
            "(?,?,?,?,?,?,?,?)";
            PreparedStatement pst = con2.prepareStatement(sql);
            pst.setString(1, nombre_en_clave);
            pst.setString(2, denominacion_comercial);
            pst.setString(3, fecha_de_inicio);
            pst.setString(4, fecha_de_finalizacion);
            pst.setString(5, estado_actual);
            pst.setString(6, empleado_dni);
            pst.setString(7, empleado_tel);
            pst.setString(8, empleado_correo);
            pst.execute();
            JOptionPane.showMessageDialog(null, "registro exitoso sql server");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "error: " + e);
        }
        
        //conexion postgresql
        Conexion_postgresql cp = new Conexion_postgresql();
        Connection con3 = cp.Conexion_postgresql();
       
            
        try {
            String sql = "INSERT INTO registro_proyectos(nombre_en_clave,"
                    + "denominacion_comercial,fecha_de_inicio,fecha_de_finalizacion,"
                    + "estado_actual,empleados_dni,empleados_telefono,"
                    + "empleados_correo_electronico)" +
            "VALUES" +
            "(?,?,'"+fecha_de_inicio+"','"+fecha_de_finalizacion+"',?,?,?,?)";
            PreparedStatement pst = con3.prepareStatement(sql);
            pst.setString(1, nombre_en_clave);
            pst.setString(2, denominacion_comercial);
            pst.setString(3, estado_actual);
            pst.setInt(4, empleados_dni_postgresql);
            pst.setString(5, empleado_tel);
            pst.setString(6, empleado_correo);
            pst.execute();
            JOptionPane.showMessageDialog(null, "registro exitoso postgresql");
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, "error: " + e);
        }
        limpiar();
    }//GEN-LAST:event_GUARDAR1ActionPerformed

    private void ELIMINAR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ELIMINAR1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ELIMINAR1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        jPanel1.setVisible(false);
        jPanel2.setVisible(false);
        jPanel3.setVisible(false);
        jPanel5.setVisible(false);
        jPanel6.setVisible(false);
        jScrollPane1.setVisible(false);
        jScrollPane3.setVisible(false);
        jScrollPane5.setVisible(false);
        jPanel7.setVisible(false);
        jPanel8.setVisible(false);
        jScrollPane6.setVisible(false);
        jPanel9.setVisible(false);
        jPanel10.setVisible(false);
        jPanel4.setVisible(true);
        jPanel4.repaint();
        jPanel4.validate();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String dni = jTextField27.getText();
        String nombres = jTextField28.getText();
        String apellidos = jTextField29.getText();
        String telefono = jTextField30.getText();
        
        //conexion mysql
        if("nombre_en_clave".equals(jComboBox3.getSelectedItem().toString()))
        {
            //oracle
            conexion_Oracle cc = new conexion_Oracle();
            Connection con = cc.conexionoracle();

            String[] titulos = {"nombre en clave","denominacion comercial","fecha de inicio"
                    ,"fecha de finalizacion","estado actual","empleados dni",
                    "empleados telefono","empleados correo electronico"};
            String[] registros = new String[9];

            DefaultTableModel modelo = new DefaultTableModel(null,titulos);

            String sql = "select * from registro_proyectos where nombre_en_clave = '"+dni+"'";

            try {

                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(sql);

                while (rs.next()) {                
                    registros[0] = rs.getString("nombre_en_clave");
                    registros[1] = rs.getString("denominacion_comercial");
                    registros[2] = rs.getString("fecha_de_inicio");
                    registros[3] = rs.getString("fecha_de_finalizacion");
                    registros[4] = rs.getString("estado_actual");
                    registros[5] = rs.getString("empleados_dni");
                    registros[6] = rs.getString("empleados_telefono");
                    registros[7] = rs.getString("empleados_correo_electronico");
                    modelo.addRow(registros);
                }
                jTable2.setModel(modelo);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error conexion: " + e);
            }
        }
        if("denominacion_comercial".equals(jComboBox3.getSelectedItem().toString())){
            //oracle
            conexion_Oracle cc = new conexion_Oracle();
            Connection con = cc.conexionoracle();

            String[] titulos = {"nombre en clave","denominacion comercial","fecha de inicio",
                "fecha de finalizacion","estado actual","empleados dni","empleados telefono"
                    ,"empleados correo electronico"};
            String[] registros = new String[9];

            DefaultTableModel modelo = new DefaultTableModel(null,titulos);

            String sql = "select * from registro_proyectos where nombre_en_clave = '"+dni+"'";

            try {

                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(sql);

                while (rs.next()) {                
                    registros[0] = rs.getString("nombre_en_clave");
                    registros[1] = rs.getString("denominacion_comercial");
                    registros[2] = rs.getString("fecha_de_inicio");
                    registros[3] = rs.getString("fecha_de_finalizacion");
                    registros[4] = rs.getString("estado_actual");
                    registros[5] = rs.getString("empleados_dni");
                    registros[6] = rs.getString("empleados_telefono");
                    registros[7] = rs.getString("empleados_correo_electronico");
                    modelo.addRow(registros);
                }
                jTable2.setModel(modelo);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error conexion: " + e);
            }
        }
        if("estado".equals(jComboBox3.getSelectedItem().toString())){
            //oracle
            conexion_Oracle cc = new conexion_Oracle();
            Connection con = cc.conexionoracle();

            String[] titulos = {"nombre en clave","denominacion comercial","fecha de inicio",
                "fecha de finalizacion","estado actual","empleados dni","empleados telefono",
                "empleados correo electronico"};
            String[] registros = new String[9];

            DefaultTableModel modelo = new DefaultTableModel(null,titulos);

            String sql = "select * from registro_proyectos where nombre_en_clave = '"+dni+"'";

            try {

                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(sql);

                while (rs.next()) {                
                    registros[0] = rs.getString("nombre_en_clave");
                    registros[1] = rs.getString("denominacion_comercial");
                    registros[2] = rs.getString("fecha_de_inicio");
                    registros[3] = rs.getString("fecha_de_finalizacion");
                    registros[4] = rs.getString("estado_actual");
                    registros[5] = rs.getString("empleados_dni");
                    registros[6] = rs.getString("empleados_telefono");
                    registros[7] = rs.getString("empleados_correo_electronico");
                    modelo.addRow(registros);
                }
                jTable2.setModel(modelo);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error conexion: " + e);
            }
        }
        if("empleado_dni".equals(jComboBox3.getSelectedItem().toString())){
            //oracle
            conexion_Oracle cc = new conexion_Oracle();
            Connection con = cc.conexionoracle();

            String[] titulos = {"nombre en clave","denominacion comercial","fecha de inicio",
                "fecha de finalizacion","estado actual","empleados dni","empleados telefono",
                "empleados correo electronico"};
            String[] registros = new String[9];

            DefaultTableModel modelo = new DefaultTableModel(null,titulos);

            String sql = "select * from registro_proyectos where nombre_en_clave = '"+dni+"'";

            try {

                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(sql);

                while (rs.next()) {                
                    registros[0] = rs.getString("nombre_en_clave");
                    registros[1] = rs.getString("denominacion_comercial");
                    registros[2] = rs.getString("fecha_de_inicio");
                    registros[3] = rs.getString("fecha_de_finalizacion");
                    registros[4] = rs.getString("estado_actual");
                    registros[5] = rs.getString("empleados_dni");
                    registros[6] = rs.getString("empleados_telefono");
                    registros[7] = rs.getString("empleados_correo_electronico");
                    modelo.addRow(registros);
                }
                jTable2.setModel(modelo);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error conexion: " + e);
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String estado = jTextField29.getText();
        //conexion Mysql
        if("nombre_en_clave".equals(jComboBox3.getSelectedItem().toString())){
            conexion_MYSQL cc = new conexion_MYSQL();
            Connection con = cc.conexionMysql();
            try {
                String sql = "update registro_proyectos set estado_actual = '"+estado+"'";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso mysql");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion Oracle
            conexion_Oracle co = new conexion_Oracle();
            Connection con1 = co.conexionoracle();
            try {
                String sql = "update registro_proyectos set estado_actual = '"+estado+"'";
                PreparedStatement pst = con1.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso oracle");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion sql server
            Comexion_Sql_Server css = new Comexion_Sql_Server();
            Connection con2 = css.Conexion_sql_server();
            try {
                String sql = "update registro_proyectos set estado_actual = '"+estado+"'";
                PreparedStatement pst = con2.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso sql server");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion postgresql
            Conexion_postgresql cp = new Conexion_postgresql();
            Connection con3 = cp.Conexion_postgresql();


            try {
                String sql = "update registro_proyectos set estado_actual = '"+estado+"'";
                PreparedStatement pst = con3.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso postgresql");
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }
        }
        //conexion Mysql
        if("denominacion_comercial".equals(jComboBox3.getSelectedItem().toString())){
            conexion_MYSQL cc = new conexion_MYSQL();
            Connection con = cc.conexionMysql();
            try {
                String sql = "update registro_proyectos set estado_actual = '"+estado+"'";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso mysql");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion Oracle
            conexion_Oracle co = new conexion_Oracle();
            Connection con1 = co.conexionoracle();
            try {
                String sql = "update registro_proyectos set estado_actual = '"+estado+"'";
                PreparedStatement pst = con1.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso oracle");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion sql server
            Comexion_Sql_Server css = new Comexion_Sql_Server();
            Connection con2 = css.Conexion_sql_server();
            try {
                String sql = "update registro_proyectos set estado_actual = '"+estado+"'";
                PreparedStatement pst = con2.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso sql server");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion postgresql
            Conexion_postgresql cp = new Conexion_postgresql();
            Connection con3 = cp.Conexion_postgresql();


            try {
                String sql = "update registro_proyectos set estado_actual = '"+estado+"'";
                PreparedStatement pst = con3.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso postgresql");
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }
        }
        //conexion Mysql
        if("empleado_dni".equals(jComboBox3.getSelectedItem().toString())){
            conexion_MYSQL cc = new conexion_MYSQL();
            Connection con = cc.conexionMysql();
            try {
                String sql = "update registro_proyectos set estado_actual = '"+estado+"'";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso mysql");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion Oracle
            conexion_Oracle co = new conexion_Oracle();
            Connection con1 = co.conexionoracle();
            try {
                String sql = "update registro_proyectos set estado_actual = '"+estado+"'";
                PreparedStatement pst = con1.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso oracle");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion sql server
            Comexion_Sql_Server css = new Comexion_Sql_Server();
            Connection con2 = css.Conexion_sql_server();
            try {
                String sql = "update registro_proyectos set estado_actual = '"+estado+"'";
                PreparedStatement pst = con2.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso sql server");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion postgresql
            Conexion_postgresql cp = new Conexion_postgresql();
            Connection con3 = cp.Conexion_postgresql();


            try {
                String sql = "update registro_proyectos set estado_actual = '"+estado+"'";
                PreparedStatement pst = con3.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso postgresql");
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }
        }
        limpiar();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextField27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField27ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField27ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
       jPanel1.setVisible(false);
       jPanel2.setVisible(false);
       jPanel3.setVisible(false);
       jPanel4.setVisible(false);
       jPanel6.setVisible(false);
       jScrollPane1.setVisible(false);
       jScrollPane2.setVisible(false);
       jScrollPane3.setVisible(false);
       jScrollPane5.setVisible(false);
       jPanel7.setVisible(false);
       jPanel8.setVisible(false);
       jScrollPane6.setVisible(false);
       jPanel9.setVisible(false);
       jPanel10.setVisible(false);
       jPanel5.setVisible(true);
       jPanel5.repaint();
       jPanel5.validate();
        
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String nombre_en_clave = jTextField31.getText();
        String denominacion_Comercial = jTextField32.getText();
        int empleado_dni = Integer.parseInt(jTextField33.getText());
        //conexion Mysql
        if("nombre en clave".equals(jComboBox4.getSelectedItem().toString())){
            conexion_MYSQL cc = new conexion_MYSQL();
            Connection con = cc.conexionMysql();
            try {
                String sql = "delete from registro_proyectos where nombre_en_clave "
                        + "= "+nombre_en_clave+"";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso mysql");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion Oracle
            conexion_Oracle co = new conexion_Oracle();
            Connection con1 = co.conexionoracle();
            try {
                String sql = "delete from registro_proyectos where nombre_en_clave "
                        + "= "+nombre_en_clave+"";
                PreparedStatement pst = con1.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso oracle");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion sql server
            Comexion_Sql_Server css = new Comexion_Sql_Server();
            Connection con2 = css.Conexion_sql_server();
            try {
                String sql = "delete from registro_proyectos where nombre_en_clave = "
                        +nombre_en_clave+"";
                PreparedStatement pst = con2.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso sql server");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion postgresql
            Conexion_postgresql cp = new Conexion_postgresql();
            Connection con3 = cp.Conexion_postgresql();


            try {
                String sql = "delete from registro_proyectos where nombre_en_clave = "
                        +nombre_en_clave+"";
                PreparedStatement pst = con3.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso postgresql");
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }
        }
        //conexion Mysql
        if("denominacion comercial".equals(jComboBox4.getSelectedItem().toString())){
            conexion_MYSQL cc = new conexion_MYSQL();
            Connection con = cc.conexionMysql();
            try {
                String sql = "delete from registro_proyectos where denominacion_Comercial "
                        + "= "+denominacion_Comercial+"";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso mysql");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion Oracle
            conexion_Oracle co = new conexion_Oracle();
            Connection con1 = co.conexionoracle();
            try {
                String sql = "delete from registro_proyectos where denominacion_Comercial "
                        + "= "+denominacion_Comercial+"";
                PreparedStatement pst = con1.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso oracle");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion sql server
            Comexion_Sql_Server css = new Comexion_Sql_Server();
            Connection con2 = css.Conexion_sql_server();
            try {
                String sql = "delete from registro_proyectos where denominacion_Comercial "
                        + "= "+denominacion_Comercial+"";
                PreparedStatement pst = con2.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso sql server");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion postgresql
            Conexion_postgresql cp = new Conexion_postgresql();
            Connection con3 = cp.Conexion_postgresql();


            try {
                String sql = "delete from registro_proyectos where denominacion_Comercial "
                        + "= "+denominacion_Comercial+"";
                PreparedStatement pst = con3.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso postgresql");
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }
        }
        //conexion Mysql
        if("empleado dni".equals(jComboBox4.getSelectedItem().toString())){
            conexion_MYSQL cc = new conexion_MYSQL();
            Connection con = cc.conexionMysql();
            try {
                String sql = "delete from registro_proyectos where empleados_dni "
                        + "= "+empleado_dni+"";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso mysql");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion Oracle
            conexion_Oracle co = new conexion_Oracle();
            Connection con1 = co.conexionoracle();
            try {
                String sql = "delete from registro_proyectos where empleados_dni "
                        + "= "+empleado_dni+"";
                PreparedStatement pst = con1.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso oracle");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion sql server
            Comexion_Sql_Server css = new Comexion_Sql_Server();
            Connection con2 = css.Conexion_sql_server();
            try {
                String sql = "delete from registro_proyectos where empleados_dni "
                        + "<= "+empleado_dni+"";
                PreparedStatement pst = con2.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso sql server");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion postgresql
            Conexion_postgresql cp = new Conexion_postgresql();
            Connection con3 = cp.Conexion_postgresql();


            try {
                String sql = "delete from registro_proyectos where empleados_dni "
                        + "= "+empleado_dni+"";
                PreparedStatement pst = con3.prepareStatement(sql);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso postgresql");
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }
        }        
        limpiar();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTextField31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField31ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField31ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
       jPanel1.setVisible(false);
       jPanel2.setVisible(false);
       jPanel3.setVisible(false);
       jPanel4.setVisible(false);
       jPanel5.setVisible(false);
       jScrollPane1.setVisible(false);
       jScrollPane2.setVisible(false);
       jScrollPane3.setVisible(false);
       jScrollPane5.setVisible(false);
       jPanel7.setVisible(false);
       jPanel8.setVisible(false);
       jScrollPane6.setVisible(false);
       jPanel9.setVisible(false);
       jPanel10.setVisible(false);
       jPanel6.setVisible(true);
       jPanel6.repaint();
       jPanel6.validate();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        jPanel1.setVisible(false);
        jPanel2.setVisible(false);
        jPanel3.setVisible(false);
        jPanel4.setVisible(false);
        jPanel5.setVisible(false);
        jScrollPane1.setVisible(false);
        jPanel6.setVisible(false);
        jPanel7.setVisible(false);
        jScrollPane3.setVisible(false);
        jPanel8.setVisible(false);
        jScrollPane6.setVisible(false);
        jPanel9.setVisible(false);
        jPanel10.setVisible(false);
        jScrollPane5.setVisible(true);
        getContentPane().validate();
        getContentPane().repaint();
        //MYSQL
        Comexion_Sql_Server cc = new Comexion_Sql_Server();
        Connection con = cc.Conexion_sql_server();
        
        String[] titulos = {"descripcion","tipo","fecha de inicio estimada",
            "fecha de inicio real","duracion estimada","duracion real",
            "registro de proyecto nombre en clave"};
        String[] registros = new String[8];
        
        DefaultTableModel modelo = new DefaultTableModel(null,titulos);
        
        String sql = "select * from tareas_de_proyectos";
        
        try {
            
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while (rs.next()) {                
                registros[0] = rs.getString("descripcion");
                registros[1] = rs.getString("tipo");
                registros[2] = rs.getString("fecha_de_inicio_estimada");
                registros[3] = rs.getString("fecha_de_inicio_real");
                registros[4] = rs.getString("duracion_estimada");
                registros[5] = rs.getString("duracion_real");
                registros[6] = rs.getString("registro_proyectos_nombre_en_clave");
                modelo.addRow(registros);
            }
            VER2.setModel(modelo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error conexion: " + e);
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jTextField34KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField34KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField34KeyTyped

    private void jTextField35KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField35KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField35KeyTyped

    private void jTextField36KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField36KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField36KeyTyped

    private void jTextField37KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField37KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField37KeyTyped

    private void jTextField38KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField38KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField38KeyTyped

    private void jTextField39KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField39KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField39KeyTyped

    private void GUARDAR2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GUARDAR2ActionPerformed
        String descripcion = jTextField34.getText();
        String tipo = jTextField35.getText();
        String fecha_de_inicio_estimada = jTextField36.getText();
        String fecha_de_inicio_real = jTextField37.getText();
        String dureacion_estimada = jTextField38.getText();
        String duracion_real = jTextField39.getText();
        String registro_proyectos_nombre_en_clave = jTextField40.getText();
        //oracle
        String dia_oracle;
        String mes_oracle;
        String año_oracle;
        String dia1_oracle;
        String mes1_oracle;
        String año1_oracle;
        String[] palabras = fecha_de_inicio_estimada.split("/");
        dia_oracle = palabras[2];
        mes_oracle = palabras[1];
        año_oracle = palabras[0];
        String[] palabras1 = fecha_de_inicio_real.split("/");
        dia1_oracle = palabras1[2];
        mes1_oracle = palabras1[1];
        año1_oracle = palabras1[0];
        String fecha_de_inicio_estimada_oracle = dia_oracle+"/"+mes_oracle+"/"+año_oracle;
        String fecha_de_inicio_real_oracle = dia1_oracle+"/"+mes1_oracle+"/"+año1_oracle;
        String[] palabras2 = fecha_de_inicio_estimada.split("/");
        dia_oracle = palabras2[2];
        mes_oracle = palabras2[1];
        año_oracle = palabras2[0];
        String[] palabras3 = fecha_de_inicio_real.split("/");
        dia1_oracle = palabras3[2];
        mes1_oracle = palabras3[1];
        año1_oracle = palabras3[0];
        String duracion_estimada_oracle = dia_oracle+"/"+mes_oracle+"/"+año_oracle;
        String duracion_real_oracle = dia1_oracle+"/"+mes1_oracle+"/"+año1_oracle;
        //conexion Mysql
        conexion_MYSQL cc = new conexion_MYSQL();
        Connection con = cc.conexionMysql();
        try {
            String sql = "insert into tareas_de_proyectos(descripcion,tipo,"
                    + "fecha_de_inicio_estimada,fecha_de_inicio_real,"
                    + "duracion_estimada,duracion_real,registro_proyectos_nombre_en_clave)"
                    + "values"
                    + "(?,?,?,?,?,?,?)";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, descripcion);
            pst.setString(2, tipo);
            pst.setString(3, fecha_de_inicio_estimada);
            pst.setString(4, fecha_de_inicio_real);
            pst.setString(5, dureacion_estimada);
            pst.setString(6, duracion_real);
            pst.setString(7, registro_proyectos_nombre_en_clave);
            pst.execute();
            JOptionPane.showMessageDialog(null, "registro exitoso mysql");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error: " + e);
        }
        
        //conexion Oracle
        conexion_Oracle co = new conexion_Oracle();
        Connection con1 = co.conexionoracle();
        try {
            String sql = "insert into tareas_de_proyectos(descripcion,tipo,"
                    + "fecha_de_inicio_estimada,fecha_de_inicio_real,"
                    + "duracion_estimada,duracion_real,regis_proye_nombre_en_clave)"
                    + "values"
                    + "(?,?,?,?,?,?,?)";
            PreparedStatement pst = con1.prepareStatement(sql);
            pst.setString(1, descripcion);
            pst.setString(2, tipo);
            pst.setString(3, fecha_de_inicio_estimada_oracle);
            pst.setString(4, fecha_de_inicio_real_oracle);
            pst.setString(5, duracion_estimada_oracle);
            pst.setString(6, duracion_real_oracle);
            pst.setString(7, registro_proyectos_nombre_en_clave);
            pst.execute();
            JOptionPane.showMessageDialog(null, "registro exitoso oracle");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "error: " + e);
        }
        
        //conexion sql server
        Comexion_Sql_Server css = new Comexion_Sql_Server();
        Connection con2 = css.Conexion_sql_server();
        try {
            String sql = "insert into [dbo].[tareas_de_proyectos](descripcion,tipo,"
                    + "fecha_de_inicio_estimada,fecha_de_inicio_real,duracion_estimada,"
                    + "duracion_real,registro_proyectos_nombre_en_clave)"
                    + "values"
                    + "(?,?,?,?,?,?,?)";
            PreparedStatement pst = con2.prepareStatement(sql);
            pst.setString(1, descripcion);
            pst.setString(2, tipo);
            pst.setString(3, fecha_de_inicio_estimada);
            pst.setString(4, fecha_de_inicio_real);
            pst.setString(5, dureacion_estimada);
            pst.setString(6, duracion_real);
            pst.setString(7, registro_proyectos_nombre_en_clave);
            pst.execute();
            JOptionPane.showMessageDialog(null, "registro exitoso sql server");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "error: " + e);
        }
        
        //conexion postgresql
        Conexion_postgresql cp = new Conexion_postgresql();
        Connection con3 = cp.Conexion_postgresql();
       
        
        try {
            String sql = "insert into tareas_de_proyectos(descripcion,tipo,"
                    + "fecha_de_inicio_estimada,fecha_de_inicio_real,duracion_estimada,"
                    + "duracion_real,registro_proyectos_nombre_en_clave)"
                    + "values"
                    + "(?,?,'"+fecha_de_inicio_estimada+"','"+fecha_de_inicio_real+"','"+dureacion_estimada+"','"+duracion_real+"',?)";
            PreparedStatement pst = con3.prepareStatement(sql);
            pst.setString(1, descripcion);
            pst.setString(2, tipo);
            pst.setString(3, registro_proyectos_nombre_en_clave);
            pst.execute();
            JOptionPane.showMessageDialog(null, "registro exitoso postgresql");
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, "error: " + e);
        }
        limpiar();
    }//GEN-LAST:event_GUARDAR2ActionPerformed

    private void ELIMINAR2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ELIMINAR2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ELIMINAR2ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        jPanel1.setVisible(false);
        jPanel2.setVisible(false);
        jPanel3.setVisible(false);
        jPanel4.setVisible(false);
        jPanel5.setVisible(false);
        jPanel6.setVisible(false);
        jScrollPane1.setVisible(false);
        jScrollPane2.setVisible(false);
        jScrollPane3.setVisible(false);
        jScrollPane4.setVisible(false);
        jScrollPane5.setVisible(false);
        jPanel8.setVisible(false);
        jScrollPane6.setVisible(false);
        jPanel9.setVisible(false);
        jPanel10.setVisible(false);
        jPanel7.setVisible(true);
        jPanel7.repaint();
        jPanel7.validate();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        String nombre_en_clave = jTextField41.getText();
        String denominacion_Comercial = jTextField42.getText();
        
        //conexion Mysql
        if("tipo".equals(jComboBox5.getSelectedItem().toString())){
            conexion_MYSQL cc = new conexion_MYSQL();
            Connection con = cc.conexionMysql();
            try {
                String sql = "delete from tareas_de_proyectos where tipo = "
                        + "'"+nombre_en_clave+"'";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso mysql");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion Oracle
            conexion_Oracle co = new conexion_Oracle();
            Connection con1 = co.conexionoracle();
            try {
                String sql = "delete from tareas_de_proyectos where tipo = "
                        + "'"+nombre_en_clave+"'";
                PreparedStatement pst = con1.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso oracle");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion sql server
            Comexion_Sql_Server css = new Comexion_Sql_Server();
            Connection con2 = css.Conexion_sql_server();
            try {
                String sql = "delete from tareas_de_proyectos where tipo = '"+nombre_en_clave+"'";
                PreparedStatement pst = con2.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso sql server");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion postgresql
            Conexion_postgresql cp = new Conexion_postgresql();
            Connection con3 = cp.Conexion_postgresql();


            try {
                String sql = "delete from tareas_de_proyectos where tipo = '"+nombre_en_clave+"'";
                PreparedStatement pst = con3.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso postgresql");
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }
        }
        //conexion Mysql
        if("descripcion".equals(jComboBox5.getSelectedItem().toString())){
            conexion_MYSQL cc = new conexion_MYSQL();
            Connection con = cc.conexionMysql();
            try {
                String sql = "delete from tareas_de_proyectos where descripcion = '"+denominacion_Comercial+"'";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso mysql");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion Oracle
            conexion_Oracle co = new conexion_Oracle();
            Connection con1 = co.conexionoracle();
            try {
                String sql = "delete from tareas_de_proyectos where descripcion = '"+denominacion_Comercial+"'";
                PreparedStatement pst = con1.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso oracle");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion sql server
            Comexion_Sql_Server css = new Comexion_Sql_Server();
            Connection con2 = css.Conexion_sql_server();
            try {
                String sql = "delete from tareas_de_proyectos where descripcion = '"+denominacion_Comercial+"'";
                PreparedStatement pst = con2.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso sql server");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion postgresql
            Conexion_postgresql cp = new Conexion_postgresql();
            Connection con3 = cp.Conexion_postgresql();


            try {
                String sql = "delete from tareas_de_proyectos where descripcion = '"+denominacion_Comercial+"'";
                PreparedStatement pst = con3.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso postgresql");
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }
        }
        limpiar();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTextField41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField41ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField41ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        jPanel1.setVisible(false);
        jPanel2.setVisible(false);
        jPanel3.setVisible(false);
        jPanel4.setVisible(false);
        jPanel5.setVisible(false);
        jPanel6.setVisible(false);
        jScrollPane1.setVisible(false);
        jScrollPane2.setVisible(false);
        jScrollPane3.setVisible(false);
        jScrollPane4.setVisible(false);
        jScrollPane5.setVisible(false);
        jPanel7.setVisible(false);
        jScrollPane6.setVisible(false);
        jPanel10.setVisible(false);
        jPanel8.setVisible(true);
        jPanel8.repaint();
        jPanel8.validate();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        jPanel1.setVisible(false);
        jPanel2.setVisible(false);
        jPanel3.setVisible(false);
        jPanel4.setVisible(false);
        jPanel5.setVisible(false);
        jScrollPane1.setVisible(false);
        jPanel6.setVisible(false);
        jPanel7.setVisible(false);
        jScrollPane3.setVisible(false);
        jPanel8.setVisible(false);
        jScrollPane5.setVisible(false);
        jPanel9.setVisible(false);
        jPanel10.setVisible(false);
        jScrollPane6.setVisible(true);
        getContentPane().validate();
        getContentPane().repaint();
        //MYSQL
        Conexion_postgresql cc = new Conexion_postgresql();
        Connection con = cc.Conexion_postgresql();
        
        String[] titulos = {"codigo","descripcion","tipo","documento",
            "empleados dni","empleados telefono","empleados correo", 
            "tareas de proyectos tipo"};
        String[] registros = new String[9];
        
        DefaultTableModel modelo = new DefaultTableModel(null,titulos);
        
        String sql = "select * from documentos_de_los_proyectos";
        
        try {
            
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while (rs.next()) {                
                registros[0] = rs.getString("codigo");
                registros[1] = rs.getString("descripcion");
                registros[2] = rs.getString("tipo");
                registros[3] = rs.getString("documento");
                registros[4] = rs.getString("empleados_dni");
                registros[5] = rs.getString("empleados_telefono");
                registros[6] = rs.getString("empleados_correo_electronico");
                registros[7] = rs.getString("tareas_de_proyectos_tipo");
                modelo.addRow(registros);
            }
            VER3.setModel(modelo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error conexion: " + e);
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jTextField43KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField43KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField43KeyTyped

    private void jTextField44KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField44KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField44KeyTyped

    private void jTextField45KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField45KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField45KeyTyped

    private void jTextField47KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField47KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField47KeyTyped

    private void jTextField48KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField48KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField48KeyTyped

    private void GUARDAR3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GUARDAR3ActionPerformed
        String codigo = jTextField43.getText();
        String descripcion = jTextField44.getText();
        String tipo = jTextField45.getText();
        String empleado_dni = jTextField48.getText();
        String empleado_telefono = jTextField47.getText();
        String empleado_correo = jTextField49.getText();
        String tareas = jTextField46.getText();
        String documento = text;
        
        //conexion Mysql
        conexion_MYSQL cc = new conexion_MYSQL();
        Connection con = cc.conexionMysql();
        try {
            String sql = "INSERT INTO documentos_de_los_proyectos(codigo,descripcion,tipo,"
                    + "documento,empleados_dni,empleados_telefono,empleados_correo_electronico,"
                    + "tareas_de_proyectos_tipo)"
                    + "VALUES"
                    + "('"+codigo+"','"+descripcion+"','"+tipo+"','"+documento+"',"
                    + "'"+empleado_dni+"','"+empleado_telefono+"','"+empleado_correo+"',"
                    + "'"+tareas+"')";
            PreparedStatement pst = con.prepareStatement(sql);
           
            pst.execute();
            JOptionPane.showMessageDialog(null, "registro exitoso mysql");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error: " + e);
        }
        
        //conexion Oracle
        conexion_Oracle co = new conexion_Oracle();
        Connection con1 = co.conexionoracle();
        try {
            String sql = "INSERT INTO documentos_de_los_proyectos(codigo,descripcion,tipo,documento,empleados_dni,empleados_telefono,empleados_correo_electronico,tareas_de_proyectos_tipo)"
                    + "VALUES"
                    + "('"+codigo+"','"+descripcion+"','"+tipo+"',utl_raw.cast_to_raw('"+documento+"'),'"+empleado_dni+"','"+empleado_telefono+"','"+empleado_correo+"','"+tareas+"')";
            PreparedStatement pst = con1.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(null, "registro exitoso oracle");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "error: " + e);
        }
        
        //conexion sql server
        Comexion_Sql_Server css = new Comexion_Sql_Server();
        Connection con2 = css.Conexion_sql_server();
        try {
            String sql = "INSERT INTO documentos_de_los_proyectos(codigo,descripcion,tipo,documento,empleados_dni,empleados_telefono,empleados_correo_electronico,tareas_de_proyectos_tipo)"
                    + "VALUES"
                    + "('"+codigo+"','"+descripcion+"','"+tipo+"',cast('"+documento+"' as varbinary(1)),'"+empleado_dni+"','"+empleado_telefono+"','"+empleado_correo+"','"+tareas+"')";
            PreparedStatement pst = con2.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(null, "registro exitoso sql server");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "error: " + e);
        }
        
        //conexion postgresql
        Conexion_postgresql cp = new Conexion_postgresql();
        Connection con3 = cp.Conexion_postgresql();
       
        
        try {
            String sql = "INSERT INTO documentos_de_los_proyectos(codigo,descripcion,tipo,documento,empleados_dni,empleados_telefono,empleados_correo_electronico,tareas_de_proyectos_tipo)"
                    + "VALUES"
                    + "('"+codigo+"','"+descripcion+"','"+tipo+"',bytea('"+documento+"'),'"+empleado_dni+"','"+empleado_telefono+"','"+empleado_correo+"','"+tareas+"')";
            PreparedStatement pst = con3.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(null, "registro exitoso postgresql");
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, "error: " + e);
        }
        limpiar();
    }//GEN-LAST:event_GUARDAR3ActionPerformed

    private void ELIMINAR3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ELIMINAR3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ELIMINAR3ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        JFileChooser jf = new JFileChooser();
        jf.showOpenDialog(this);
        File archivo = jf.getSelectedFile();
        if(archivo != null){
            text = archivo.getName();
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        jPanel1.setVisible(false);
        jPanel2.setVisible(false);
        jPanel3.setVisible(false);
        jPanel4.setVisible(false);
        jPanel5.setVisible(false);
        jPanel6.setVisible(false);
        jScrollPane1.setVisible(false);
        jScrollPane2.setVisible(false);
        jScrollPane3.setVisible(false);
        jScrollPane4.setVisible(false);
        jScrollPane5.setVisible(false);
        jPanel8.setVisible(false);
        jScrollPane6.setVisible(false);
        jPanel7.setVisible(false);
        jPanel10.setVisible(false);
        jPanel9.setVisible(true);
        jPanel9.repaint();
        jPanel9.validate();
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        String nombre_en_clave = jTextField50.getText();
        String denominacion_Comercial = jTextField51.getText();
        
        //conexion Mysql
        if("codigo".equals(jComboBox6.getSelectedItem().toString())){
            conexion_MYSQL cc = new conexion_MYSQL();
            Connection con = cc.conexionMysql();
            try {
                String sql = "delete from documentos_de_los_proyectos where codigo = '"+nombre_en_clave+"'";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso mysql");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion Oracle
            conexion_Oracle co = new conexion_Oracle();
            Connection con1 = co.conexionoracle();
            try {
                String sql = "delete from documentos_de_los_proyectos where codigo = '"+nombre_en_clave+"'";
                PreparedStatement pst = con1.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso oracle");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion sql server
            Comexion_Sql_Server css = new Comexion_Sql_Server();
            Connection con2 = css.Conexion_sql_server();
            try {
                String sql = "delete from documentos_de_los_proyectos where codigo = '"+nombre_en_clave+"'";
                PreparedStatement pst = con2.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso sql server");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion postgresql
            Conexion_postgresql cp = new Conexion_postgresql();
            Connection con3 = cp.Conexion_postgresql();


            try {
                String sql = "delete from documentos_de_los_proyectos where codigo = '"+nombre_en_clave+"'";
                PreparedStatement pst = con3.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso postgresql");
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }
        }
        //conexion Mysql
        if("empleado dni".equals(jComboBox6.getSelectedItem().toString())){
            conexion_MYSQL cc = new conexion_MYSQL();
            Connection con = cc.conexionMysql();
            try {
                String sql = "delete from documentos_de_los_proyectos where empleados_dni = '"+denominacion_Comercial+"'";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso mysql");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion Oracle
            conexion_Oracle co = new conexion_Oracle();
            Connection con1 = co.conexionoracle();
            try {
                String sql = "delete from documentos_de_los_proyectos where empleados_dni = '"+denominacion_Comercial+"'";
                PreparedStatement pst = con1.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso oracle");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion sql server
            Comexion_Sql_Server css = new Comexion_Sql_Server();
            Connection con2 = css.Conexion_sql_server();
            try {
                String sql = "delete from documentos_de_los_proyectos where empleados_dni = '"+denominacion_Comercial+"'";
                PreparedStatement pst = con2.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso sql server");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }

            //conexion postgresql
            Conexion_postgresql cp = new Conexion_postgresql();
            Connection con3 = cp.Conexion_postgresql();


            try {
                String sql = "delete from documentos_de_los_proyectos where empleados_dni = '"+denominacion_Comercial+"'";
                PreparedStatement pst = con3.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "registro exitoso postgresql");
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, "error: " + e);
            }
        }
        limpiar();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jTextField50ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField50ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField50ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        jPanel1.setVisible(false);
        jPanel2.setVisible(false);
        jPanel3.setVisible(false);
        jPanel4.setVisible(false);
        jPanel5.setVisible(false);
        jPanel6.setVisible(false);
        jScrollPane1.setVisible(false);
        jScrollPane2.setVisible(false);
        jScrollPane3.setVisible(false);
        jScrollPane4.setVisible(false);
        jScrollPane5.setVisible(false);
        jPanel8.setVisible(false);
        jScrollPane6.setVisible(false);
        jPanel7.setVisible(false);
        jPanel9.setVisible(false);
        jPanel10.setVisible(true);
        jPanel10.repaint();
        jPanel10.validate();
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    public void limpiar()
    {
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
    }
    

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(interfaz_usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(interfaz_usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(interfaz_usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(interfaz_usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new interfaz_usuario().setVisible(true);
            }
        });
    }


    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem ACTUALIZAR_EMPLEADOS;
    private javax.swing.JButton ELIMINAR;
    private javax.swing.JButton ELIMINAR1;
    private javax.swing.JButton ELIMINAR2;
    private javax.swing.JButton ELIMINAR3;
    private javax.swing.JMenuItem ELIMINAR_EMPLEADO;
    private javax.swing.JMenu EMPLEADOS;
    private javax.swing.JButton GUARDAR;
    private javax.swing.JButton GUARDAR1;
    private javax.swing.JButton GUARDAR2;
    private javax.swing.JButton GUARDAR3;
    private javax.swing.JMenuItem INSERTAR_EMPLEADOS;
    private javax.swing.JTable VER;
    private javax.swing.JTable VER1;
    private javax.swing.JTable VER2;
    private javax.swing.JTable VER3;
    private javax.swing.JMenuItem VER_EMPLEADOS;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField23;
    private javax.swing.JTextField jTextField24;
    private javax.swing.JTextField jTextField25;
    private javax.swing.JTextField jTextField26;
    private javax.swing.JTextField jTextField27;
    private javax.swing.JTextField jTextField28;
    private javax.swing.JTextField jTextField29;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField30;
    private javax.swing.JTextField jTextField31;
    private javax.swing.JTextField jTextField32;
    private javax.swing.JTextField jTextField33;
    private javax.swing.JTextField jTextField34;
    private javax.swing.JTextField jTextField35;
    private javax.swing.JTextField jTextField36;
    private javax.swing.JTextField jTextField37;
    private javax.swing.JTextField jTextField38;
    private javax.swing.JTextField jTextField39;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField40;
    private javax.swing.JTextField jTextField41;
    private javax.swing.JTextField jTextField42;
    private javax.swing.JTextField jTextField43;
    private javax.swing.JTextField jTextField44;
    private javax.swing.JTextField jTextField45;
    private javax.swing.JTextField jTextField46;
    private javax.swing.JTextField jTextField47;
    private javax.swing.JTextField jTextField48;
    private javax.swing.JTextField jTextField49;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField50;
    private javax.swing.JTextField jTextField51;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
